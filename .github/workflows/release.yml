name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive-name: mxlogger_analyzer_rust-linux-x86_64.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive-name: mxlogger_analyzer_rust-macos-x86_64.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive-name: mxlogger_analyzer_rust-macos-aarch64.tar.gz

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create archive
      run: |
        mkdir -p dist
        cp target/${{ matrix.target }}/release/mxlogger_analyzer_rust dist/
        tar -czf ${{ matrix.archive-name }} -C dist .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.archive-name }}
        path: ${{ matrix.archive-name }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: "*.tar.gz"
        merge-multiple: true

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: '*.tar.gz'
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
